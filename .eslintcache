[{"C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\App.js":"1","C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\index.js":"2","C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\Header.js":"3","C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\reportWebVitals.js":"4"},{"size":2621,"mtime":1606439353472,"results":"5","hashOfConfig":"6"},{"size":546,"mtime":1606362788969,"results":"7","hashOfConfig":"6"},{"size":187,"mtime":1606362859504,"results":"8","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},"ssbc1k",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\App.js",["20","21","22","23"],"import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [quote, setQuote] = useState()\n  const [character, setCharacter] = useState()\n  const [image, setImage] = useState()\n  const [character2, setCharacter2] = useState()\n  const [image2, setImage2] = useState()\n  const [loading, setLoading] = useState(false)\n  const [score, setScore] = useState(0)\n  let url = \"https://thesimpsonsquoteapi.glitch.me/quotes?count=10\"\n\n\n  let woohoo = new Audio(\"http://cs.klan-hub.ru/zombie/sound/misc/whoo.wav\")\n  let doh = new Audio(\"http://www.bobainsworth.com/wav/simpsons/doh.wav\")\n  const ranNum2 = Math.round(Math.random())\n  function guesser(e) {\n    if (e.target.src === image) {\n      setScore(prevScore => score + 1)\n      handleClick()\n      woohoo.play()\n    }\n    else {\n      handleClick()\n      doh.play()\n    }\n\n  }\n\n\n  const handleClick = () => {\n    getQuote()\n  }\n\n\n\n\n  useEffect(() => { getQuote() }, [])\n  const getQuote = () => {\n    setLoading(true)\n    fetch(url).then(res => res.json())\n      .then(data => {\n\n        const ranNum = Math.floor(Math.random() * Math.floor(data.length -1));\n\n        function ranNum2() {\n          const ranNum2 = Math.floor(Math.random() * Math.floor(data.length -1));\n\n          if (ranNum === ranNum2 && ranNum2 !== data.length) {\n            return ranNum2 + 1\n          }\n          else if (ranNum === ranNum2 && ranNum2 === data.length) {\n            return ranNum2 - 1\n          }\n\n          else {\n            return ranNum2\n          }\n        }\n\n\n        const ranNum22 = ranNum2()\n        const ranNum3 = Math.round(Math.random())\n        console.log(ranNum22)\n        setQuote(data[ranNum].quote)\n        setCharacter(data[ranNum].character)\n        setImage(data[ranNum].image)\n        setCharacter2(data[ranNum22].character)\n        setImage2(data[ranNum22].image)\n        setLoading(false)\n      }, [character, character2, image, image2, ranNum2])\n  }\n\n\n\n  return (\n    <div className=\"generator\">\n      <h1>Score: {score}</h1>\n      <h1 class=\"quote\">\"{quote}\"</h1>\n      <div class=\"character-chooser\" style={Math.round(Math.random()) === 1 ? { flexDirection: \"row-reverse\" } : { flexDirection: \"row\" } && !loading ? { display: \"flex\" } : { display: \"none\" }}>\n        <div id=\"char1\">\n          <h2 class=\"character\"> {character}</h2>\n          <img onClick={(e) => guesser(e)} src={image}></img>\n        </div>\n        <div id=\"char2\">\n          <h2 class=\"character2\"> {character2}</h2>\n          <img onClick={(e) => guesser(e)} src={image2}></img>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\index.js",[],"C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\Header.js",["24","25"],"import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <h1 id=\"Header\">Simpsons Quote Quiz</h1>\r\n  )\r\n}\r\nexport default Header;\r\n","C:\\Users\\Lukas\\Documents\\dev-academy\\quote-generator\\src\\reportWebVitals.js",[],{"ruleId":"26","severity":1,"message":"27","line":40,"column":35,"nodeType":"28","endLine":40,"endColumn":37,"suggestions":"29"},{"ruleId":"30","severity":1,"message":"31","line":65,"column":15,"nodeType":"32","messageId":"33","endLine":65,"endColumn":22},{"ruleId":"34","severity":1,"message":"35","line":85,"column":11,"nodeType":"36","endLine":85,"endColumn":56},{"ruleId":"34","severity":1,"message":"35","line":89,"column":11,"nodeType":"36","endLine":89,"endColumn":57},{"ruleId":"30","severity":1,"message":"37","line":2,"column":17,"nodeType":"32","messageId":"33","endLine":2,"endColumn":26},{"ruleId":"30","severity":1,"message":"38","line":2,"column":28,"nodeType":"32","messageId":"33","endLine":2,"endColumn":36},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getQuote'. Either include it or remove the dependency array.","ArrayExpression",["39"],"no-unused-vars","'ranNum3' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useState' is defined but never used.",{"desc":"40","fix":"41"},"Update the dependencies array to be: [getQuote]",{"range":"42","text":"43"},[950,952],"[getQuote]"]