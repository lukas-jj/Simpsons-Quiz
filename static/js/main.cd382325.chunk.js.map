{"version":3,"sources":["App.js","reportWebVitals.js","Header.js","index.js"],"names":["App","useState","quote","setQuote","character","setCharacter","image","setImage","character2","setCharacter2","image2","setImage2","setLoading","score","setScore","url","woohoo","Audio","doh","ranNum2","Math","round","random","guesser","e","console","log","target","src","prevScore","handleClick","play","getQuote","getQuote2","useEffect","fetch","then","res","json","data","ranNum","floor","length","className","class","style","flexDirection","id","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Header","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oNAqFeA,MAlFf,WAAgB,IAAD,EAEaC,qBAFb,mBAENC,EAFM,KAECC,EAFD,OAGqBF,qBAHrB,mBAGNG,EAHM,KAGKC,EAHL,OAIaJ,qBAJb,mBAINK,EAJM,KAICC,EAJD,OAKuBN,qBALvB,mBAKNO,EALM,KAKMC,EALN,OAMeR,qBANf,mBAMNS,EANM,KAMEC,EANF,OAOiBV,oBAAS,GAP1B,mBAOGW,GAPH,aAQaX,mBAAS,GARtB,mBAQNY,EARM,KAQCC,EARD,KASTC,EAAM,+CAGNC,EAAS,IAAIC,MAAM,oDACnBC,EAAM,IAAID,MAAM,oDACdE,EAAUC,KAAKC,MAAMD,KAAKE,UAChC,SAASC,EAAQC,GACfC,QAAQC,IAAIF,EAAEG,OAAOC,KACjBJ,EAAEG,OAAOC,MAAQtB,GACnBQ,GAAS,SAAAe,GAAS,OAAIhB,EAAQ,KAC9BiB,IACAd,EAAOe,SAGPD,IACAZ,EAAIa,QAMR,IAAMD,EAAc,WAClBE,IACAC,KAGFC,qBAAU,WAAQF,MAAc,IAChC,IAAMA,EAAW,WACfpB,GAAW,GACXuB,MAAMpB,GAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAG,GACJ3B,GAAW,GACX,IAAM4B,EAASpB,KAAKqB,MAAMrB,KAAKE,SAAWF,KAAKqB,MAAMF,EAAKG,SAC1DjB,QAAQC,IAAIa,EAAKC,IACjBrC,EAASoC,EAAKC,GAAQtC,OACtBG,EAAakC,EAAKC,GAAQpC,WAC1BG,EAASgC,EAAKC,GAAQlC,SACrB,CAACF,EAAWE,EAAOa,KAK1Be,qBAAU,WAAQD,MAAe,IACjC,IAAMA,EAAY,WAChBrB,GAAW,GACXuB,MAAMpB,GAAKqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UACxBF,MAAK,SAAAG,GACJ3B,GAAW,GACX,IAAM4B,EAASpB,KAAKqB,MAAMrB,KAAKE,SAAWF,KAAKqB,MAAMF,EAAKG,SAC1DjB,QAAQC,IAAIa,EAAKC,IACjB/B,EAAc8B,EAAKC,GAAQpC,WAC3BO,EAAU4B,EAAKC,GAAQlC,SACtB,CAACE,EAAYE,KAGpB,OADAe,QAAQC,IAAIP,GAEV,sBAAKwB,UAAU,YAAf,UACE,yCAAY9B,KACZ,qBAAI+B,MAAM,QAAV,cAAoB1C,EAApB,OACA,sBAAK0C,MAAM,oBAAoBC,MAAO1B,EAAU,CAAE2B,cAAe,eAAkB,CAAEA,cAAe,OAApG,UACE,sBAAKC,GAAG,QAAR,UACE,qBAAIH,MAAM,YAAV,cAAwBxC,KACxB,qBAAK4C,QAAS,SAACxB,GAAD,OAAOD,EAAQC,IAAII,IAAKtB,OAExC,sBAAKyC,GAAG,QAAR,UACE,qBAAIH,MAAM,aAAV,cAAyBpC,KACzB,qBAAKwC,QAAS,SAACxB,GAAD,OAAOD,EAAQC,IAAII,IAAKlB,cClEjCuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCCCO,MALf,WACE,OACE,oBAAIV,GAAG,SAAP,kCCGJW,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,EAAD,OAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.cd382325.chunk.js","sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [quote, setQuote] = useState()\n  const [character, setCharacter] = useState()\n  const [image, setImage] = useState()\n  const [character2, setCharacter2] = useState()\n  const [image2, setImage2] = useState()\n  const [loading, setLoading] = useState(false)\n  const [score, setScore] = useState(0)\n  let url = \"https://thesimpsonsquoteapi.glitch.me/quotes\"\n\n\n  let woohoo = new Audio(\"http://cs.klan-hub.ru/zombie/sound/misc/whoo.wav\")\n  let doh = new Audio(\"http://www.bobainsworth.com/wav/simpsons/doh.wav\")\n  const ranNum2 = Math.round(Math.random())\n  function guesser(e) {\n    console.log(e.target.src)\n    if (e.target.src === image) {\n      setScore(prevScore => score + 1)\n      handleClick()\n      woohoo.play()\n    }\n    else {\n      handleClick()\n      doh.play()\n    }\n\n  }\n\n\n  const handleClick = () => {\n    getQuote()\n    getQuote2()\n  }\n\n  useEffect(() => { getQuote() }, [])\n  const getQuote = () => {\n    setLoading(true)\n    fetch(url).then(res => res.json())\n      .then(data => {\n        setLoading(false)\n        const ranNum = Math.floor(Math.random() * Math.floor(data.length));\n        console.log(data[ranNum])\n        setQuote(data[ranNum].quote)\n        setCharacter(data[ranNum].character)\n        setImage(data[ranNum].image)\n      }, [character, image, ranNum2])\n  }\n\n\n\n  useEffect(() => { getQuote2() }, [])\n  const getQuote2 = () => {\n    setLoading(true)\n    fetch(url).then(res => res.json())\n      .then(data => {\n        setLoading(false)\n        const ranNum = Math.floor(Math.random() * Math.floor(data.length));\n        console.log(data[ranNum])\n        setCharacter2(data[ranNum].character)\n        setImage2(data[ranNum].image)\n      }, [character2, image2])\n  }\n  console.log(ranNum2)\n  return (\n    <div className=\"generator\">\n      <h1>Score: {score}</h1>\n      <h1 class=\"quote\">\"{quote}\"</h1>\n      <div class=\"character-chooser\" style={ranNum2 ? { flexDirection: \"row-reverse\" } : { flexDirection: \"row\" }}>\n        <div id=\"char1\">\n          <h2 class=\"character\"> {character}</h2>\n          <img onClick={(e) => guesser(e)} src={image}></img>\n        </div>\n        <div id=\"char2\">\n          <h2 class=\"character2\"> {character2}</h2>\n          <img onClick={(e) => guesser(e)} src={image2}></img>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './App.css';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nfunction Header() {\r\n  return (\r\n    <h1 id=\"Header\">Simpsons Quote Quiz</h1>\r\n  )\r\n}\r\nexport default Header;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Header from \"./Header\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Header />\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}